\hypertarget{commands_8h}{}\section{include/commands.h File Reference}
\label{commands_8h}\index{include/commands.\+h@{include/commands.\+h}}


Contains fonctions related to shell commands and structure modelising commands.  


{\ttfamily \#include $<$stdlib.\+h$>$}\\*
{\ttfamily \#include $<$string.\+h$>$}\\*
{\ttfamily \#include $<$stdio.\+h$>$}\\*
{\ttfamily \#include $<$sys/stat.\+h$>$}\\*
{\ttfamily \#include $<$fcntl.\+h$>$}\\*
{\ttfamily \#include $<$dirent.\+h$>$}\\*
{\ttfamily \#include \char`\"{}parameters.\+def\char`\"{}}\\*
Include dependency graph for commands.\+h\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\subsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structcommand}{command}
\begin{DoxyCompactList}\small\item\em Structure for a shell command. \end{DoxyCompactList}\item 
struct \hyperlink{structparsedCommand}{parsed\+Command}
\begin{DoxyCompactList}\small\item\em Structure for a shell Parsed command. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
typedef struct \hyperlink{structparsedCommand}{parsed\+Command} {\bfseries Parsed\+Command}\hypertarget{commands_8h_adb8ecdaf417f1295f8a35899b5f515d7}{}\label{commands_8h_adb8ecdaf417f1295f8a35899b5f515d7}

\item 
typedef struct \hyperlink{structcommand}{command} {\bfseries Command}\hypertarget{commands_8h_a0c87688e472cb20dcda9af493bbdd6f2}{}\label{commands_8h_a0c87688e472cb20dcda9af493bbdd6f2}

\end{DoxyCompactItemize}
\subsection*{Enumerations}
\begin{DoxyCompactItemize}
\item 
enum \hyperlink{commands_8h_a5d74787dedbc4e11c1ab15bf487e61f8}{State} \{ \\*
{\bfseries S0}, 
{\bfseries S1}, 
{\bfseries S2}, 
{\bfseries S3}, 
\\*
{\bfseries S4}, 
{\bfseries S5}, 
{\bfseries S6}, 
{\bfseries S7}, 
\\*
{\bfseries S8}, 
{\bfseries S9}, 
{\bfseries S10}, 
{\bfseries S11}, 
\\*
{\bfseries S12}, 
{\bfseries S13}
 \}
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{commands_8h_a57c68aab57534e885f0a3d5b6c4c9ec5}{init\+Commands} (\hyperlink{structcommand}{Command} $\ast$array\mbox{[}M\+A\+X\+C\+MD\mbox{]})
\begin{DoxyCompactList}\small\item\em Initialize an array of Parsed\+Commands. \end{DoxyCompactList}\item 
int \hyperlink{commands_8h_aa9e36235f87dc521e811868f937660ff}{free\+Commands} (int nb\+Cmd, \hyperlink{structcommand}{Command} $\ast$$\ast$commands)
\begin{DoxyCompactList}\small\item\em Free all the dynamically allocated commands. \end{DoxyCompactList}\item 
\hyperlink{structparsedCommand}{Parsed\+Command} $\ast$ \hyperlink{commands_8h_a3d4c73ac930d21fe06b7209c4b739e80}{parse\+Command} (char $\ast$input)
\begin{DoxyCompactList}\small\item\em Parse a String Parsed\+Command. \end{DoxyCompactList}\item 
int \hyperlink{commands_8h_a169a1c58cf12a2c8ab3f64dff204679c}{add\+Cmd\+To\+Array} (\hyperlink{structcommand}{Command} $\ast$$\ast$array, int index, char $\ast$name, int($\ast$cmd\+\_\+ptr)(int, char $\ast$\mbox{[}$\,$\mbox{]}))
\begin{DoxyCompactList}\small\item\em Adds a Command struct to the array. \end{DoxyCompactList}\item 
void \hyperlink{commands_8h_aa238e5eb5f9b2ddf86c1b9ca8d225680}{print\+Name} (\hyperlink{structparsedCommand}{Parsed\+Command} $\ast$cmd)
\begin{DoxyCompactList}\small\item\em Print the name of the Parsed\+Command. \end{DoxyCompactList}\item 
void \hyperlink{commands_8h_a958919caa6d3a044f978f78d6f349c71}{print\+Parameters} (\hyperlink{structparsedCommand}{Parsed\+Command} $\ast$cmd)
\begin{DoxyCompactList}\small\item\em Print the parameters of the Parsed\+Command. \end{DoxyCompactList}\item 
void \hyperlink{commands_8h_abafad01275aff6f348237f2e707435cf}{print\+Options} (\hyperlink{structparsedCommand}{Parsed\+Command} $\ast$cmd)
\begin{DoxyCompactList}\small\item\em Print the options of the Parsed\+Command. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Contains fonctions related to shell commands and structure modelising commands. 

\begin{DoxyAuthor}{Author}
Antoine Sauray 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
14 April 2016 
\end{DoxyDate}


\subsection{Enumeration Type Documentation}
\index{commands.\+h@{commands.\+h}!State@{State}}
\index{State@{State}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{State}{State}}]{\setlength{\rightskip}{0pt plus 5cm}enum {\bf State}}\hypertarget{commands_8h_a5d74787dedbc4e11c1ab15bf487e61f8}{}\label{commands_8h_a5d74787dedbc4e11c1ab15bf487e61f8}
Enumeration of all the automate states 

\subsection{Function Documentation}
\index{commands.\+h@{commands.\+h}!add\+Cmd\+To\+Array@{add\+Cmd\+To\+Array}}
\index{add\+Cmd\+To\+Array@{add\+Cmd\+To\+Array}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{add\+Cmd\+To\+Array(\+Command $\ast$$\ast$array, int index, char $\ast$name, int($\ast$cmd\+\_\+ptr)(int, char $\ast$[]))}{addCmdToArray(Command **array, int index, char *name, int(*cmd_ptr)(int, char *[]))}}]{\setlength{\rightskip}{0pt plus 5cm}int add\+Cmd\+To\+Array (
\begin{DoxyParamCaption}
\item[{{\bf Command} $\ast$$\ast$}]{array, }
\item[{int}]{index, }
\item[{char $\ast$}]{name, }
\item[{int($\ast$)(int, char $\ast$\mbox{[}$\,$\mbox{]})}]{cmd\+\_\+ptr}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_a169a1c58cf12a2c8ab3f64dff204679c}{}\label{commands_8h_a169a1c58cf12a2c8ab3f64dff204679c}


Adds a Command struct to the array. 


\begin{DoxyParams}[1]{Parameters}
 & {\em array} & The array in which to add the Command \\
\hline
\mbox{\tt in}  & {\em index} & The index to add the Command \\
\hline
 & {\em name} & The name of the Command \\
\hline
 & {\em name} & The function pointer to call the function\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
\{ description\+\_\+of\+\_\+the\+\_\+return\+\_\+value \} 
\end{DoxyReturn}
\index{commands.\+h@{commands.\+h}!free\+Commands@{free\+Commands}}
\index{free\+Commands@{free\+Commands}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{free\+Commands(int nb\+Cmd, Command $\ast$$\ast$commands)}{freeCommands(int nbCmd, Command **commands)}}]{\setlength{\rightskip}{0pt plus 5cm}int free\+Commands (
\begin{DoxyParamCaption}
\item[{int}]{nb\+Cmd, }
\item[{{\bf Command} $\ast$$\ast$}]{commands}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_aa9e36235f87dc521e811868f937660ff}{}\label{commands_8h_aa9e36235f87dc521e811868f937660ff}


Free all the dynamically allocated commands. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em nb\+Cmd} & How many commands have been allocated in the array \\
\hline
 & {\em commands} & The array of allocated commands\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 if the number of commands is ok, -\/1 otherwise 
\end{DoxyReturn}
\index{commands.\+h@{commands.\+h}!init\+Commands@{init\+Commands}}
\index{init\+Commands@{init\+Commands}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{init\+Commands(\+Command $\ast$array[M\+A\+X\+C\+MD])}{initCommands(Command *array[MAXCMD])}}]{\setlength{\rightskip}{0pt plus 5cm}int init\+Commands (
\begin{DoxyParamCaption}
\item[{{\bf Command} $\ast$}]{array\mbox{[}\+M\+A\+X\+C\+M\+D\mbox{]}}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_a57c68aab57534e885f0a3d5b6c4c9ec5}{}\label{commands_8h_a57c68aab57534e885f0a3d5b6c4c9ec5}


Initialize an array of Parsed\+Commands. 

\begin{DoxyReturn}{Returns}
1 if everything went correctly. 0 otherwise 
\end{DoxyReturn}
\index{commands.\+h@{commands.\+h}!parse\+Command@{parse\+Command}}
\index{parse\+Command@{parse\+Command}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{parse\+Command(char $\ast$input)}{parseCommand(char *input)}}]{\setlength{\rightskip}{0pt plus 5cm}{\bf Parsed\+Command}$\ast$ parse\+Command (
\begin{DoxyParamCaption}
\item[{char $\ast$}]{input}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_a3d4c73ac930d21fe06b7209c4b739e80}{}\label{commands_8h_a3d4c73ac930d21fe06b7209c4b739e80}


Parse a String Parsed\+Command. 


\begin{DoxyParams}{Parameters}
{\em input} & the input string to parse \\
\hline
\end{DoxyParams}
\begin{DoxySeeAlso}{See also}
Parsed\+Command 
\end{DoxySeeAlso}
\begin{DoxyReturn}{Returns}
a Parsed\+Command struct which holds the different parsed informations 
\end{DoxyReturn}
\index{commands.\+h@{commands.\+h}!print\+Name@{print\+Name}}
\index{print\+Name@{print\+Name}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{print\+Name(\+Parsed\+Command $\ast$cmd)}{printName(ParsedCommand *cmd)}}]{\setlength{\rightskip}{0pt plus 5cm}void print\+Name (
\begin{DoxyParamCaption}
\item[{{\bf Parsed\+Command} $\ast$}]{cmd}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_aa238e5eb5f9b2ddf86c1b9ca8d225680}{}\label{commands_8h_aa238e5eb5f9b2ddf86c1b9ca8d225680}


Print the name of the Parsed\+Command. 


\begin{DoxyParams}{Parameters}
{\em cmd} & The Parsed\+Command structure \\
\hline
\end{DoxyParams}
\index{commands.\+h@{commands.\+h}!print\+Options@{print\+Options}}
\index{print\+Options@{print\+Options}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{print\+Options(\+Parsed\+Command $\ast$cmd)}{printOptions(ParsedCommand *cmd)}}]{\setlength{\rightskip}{0pt plus 5cm}void print\+Options (
\begin{DoxyParamCaption}
\item[{{\bf Parsed\+Command} $\ast$}]{cmd}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_abafad01275aff6f348237f2e707435cf}{}\label{commands_8h_abafad01275aff6f348237f2e707435cf}


Print the options of the Parsed\+Command. 


\begin{DoxyParams}{Parameters}
{\em cmd} & The Parsed\+Command structure \\
\hline
\end{DoxyParams}
\index{commands.\+h@{commands.\+h}!print\+Parameters@{print\+Parameters}}
\index{print\+Parameters@{print\+Parameters}!commands.\+h@{commands.\+h}}
\subsubsection[{\texorpdfstring{print\+Parameters(\+Parsed\+Command $\ast$cmd)}{printParameters(ParsedCommand *cmd)}}]{\setlength{\rightskip}{0pt plus 5cm}void print\+Parameters (
\begin{DoxyParamCaption}
\item[{{\bf Parsed\+Command} $\ast$}]{cmd}
\end{DoxyParamCaption}
)}\hypertarget{commands_8h_a958919caa6d3a044f978f78d6f349c71}{}\label{commands_8h_a958919caa6d3a044f978f78d6f349c71}


Print the parameters of the Parsed\+Command. 


\begin{DoxyParams}{Parameters}
{\em cmd} & The Parsed\+Command structure \\
\hline
\end{DoxyParams}
